package object;

import java.util.Properties;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.mail.Flags;
import javax.mail.Folder;
import javax.mail.Message;
import javax.mail.Session;
import javax.mail.Store;

public class Email {
	String hostname = "smtp.gmail.com";
	String username = "dikakoko04@gmail.com";
	String password = "04Nov1998**";
	int message_count;
	int unread_msg_count;
	String email_subject;
	Message email_message;
	
	Properties sysProps = System.getProperties();
	public void setSysProps(Properties sysProps) {
		this.sysProps = sysProps;
		sysProps.setProperty("mail.store.protocol", "imaps");
		
		try {
			Session session = Session.getInstance(sysProps, null);
			Store store = session.getStore();
			store.connect(hostname, username, password);
			Folder email_inbox = store.getFolder("INBOX");
			message_count = email_inbox.getNewMessageCount();
			System.out.println("Unread Email Count: " + unread_msg_count);
			email_message = email_inbox.getMessage(message_count);
			email_subject = email_message.getSubject();
			
			Pattern link_pattern = Pattern.compile("(?:(?:\\\\r\\\\n)?[ \\\\t])*(?:(?:(?:[^()<>@,;:\\\\\\\\\\\".\\\\[\\\\] \\\\000-\\\\031]+(?:(?:(?:\\\\r\\\\n)?[ \\\\t])+|\\\\Z|(?=[\\\\[\\\"()<>@,;:\\\\\\\\\\\".\\\\[\\\\]]))|\\\"(?:[^\\\\\\\"\\\\r\\\\\\\\]|\\\\\\\\.|(?:(?:\\\\r\\\\n)?[ \\\\t]))*\\\"(?:(?:\\\\r\\\\n)?[ \\\\t])*)(?:\\\\.(?:(?:\\\\r\\\\n)?[ \\\\t])*(?:[^()<>@,;:\\\\\\\\\\\".\\\\[\\\\] \\\\000-\\\\031]+(?:(?:(?:\\\\r\\\\n)?[ \\\\t])+|\\\\Z|(?=[\\\\[\\\"()<>@,;:\\\\\\\\\\\".\\\\[\\\\]]))|\\\"(?:[^\\\\\\\"\\\\r\\\\\\\\]|\\\\\\\\.|(?:(?:\\\\r\\\\n)?[ \\\\t]))*\\\"(?:(?:\\\\r\\\\n)?[ \\\\t])*))*@(?:(?:\\\\r\\\\n)?[ \\\\t])*(?:[^()<>@,;:\\\\\\\\\\\".\\\\[\\\\] \\\\000-\\\\031]+(?:(?:(?:\\\\r\\\\n)?[ \\\\t])+|\\\\Z|(?=[\\\\[\\\"()<>@,;:\\\\\\\\\\\".\\\\[\\\\]]))|\\\\[([^\\\\[\\\\]\\\\r\\\\\\\\]|\\\\\\\\.)*\\\\](?:(?:\\\\r\\\\n)?[ \\\\t])*)(?:\\\\.(?:(?:\\\\r\\\\n)?[ \\\\t])*(?:[^()<>@,;:\\\\\\\\\\\".\\\\[\\\\] \\\\000-\\\\031]+(?:(?:(?:\\\\r\\\\n)?[ \\\\t])+|\\\\Z|(?=[\\\\[\\\"()<>@,;:\\\\\\\\\\\".\\\\[\\\\]]))|\\\\[([^\\\\[\\\\]\\\\r\\\\\\\\]|\\\\\\\\.)*\\\\](?:(?:\\\\r\\\\n)?[ \\\\t])*))*|(?:[^()<>@,;:\\\\\\\\\\\".\\\\[\\\\] \\\\000-\\\\031]+(?:(?:(?:\\\\r\\\\n)?[ \\\\t])+|\\\\Z|(?=[\\\\[\\\"()<>@,;:\\\\\\\\\\\".\\\\[\\\\]]))|\\\"(?:[^\\\\\\\"\\\\r\\\\\\\\]|\\\\\\\\.|(?:(?:\\\\r\\\\n)?[ \\\\t]))*\\\"(?:(?:\\\\r\\\\n)?[ \\\\t])*)*\\\\<(?:(?:\\\\r\\\\n)?[ \\\\t])*(?:@(?:[^()<>@,;:\\\\\\\\\\\".\\\\[\\\\] \\\\000-\\\\031]+(?:(?:(?:\\\\r\\\\n)?[ \\\\t])+|\\\\Z|(?=[\\\\[\\\"()<>@,;:\\\\\\\\\\\".\\\\[\\\\]]))|\\\\[([^\\\\[\\\\]\\\\r\\\\\\\\]|\\\\\\\\.)*\\\\](?:(?:\\\\r\\\\n)?[ \\\\t])*)(?:\\\\.(?:(?:\\\\r\\\\n)?[ \\\\t])*(?:[^()<>@,;:\\\\\\\\\\\".\\\\[\\\\] \\\\000-\\\\031]+(?:(?:(?:\\\\r\\\\n)?[ \\\\t])+|\\\\Z|(?=[\\\\[\\\"()<>@,;:\\\\\\\\\\\".\\\\[\\\\]]))|\\\\[([^\\\\[\\\\]\\\\r\\\\\\\\]|\\\\\\\\.)*\\\\](?:(?:\\\\r\\\\n)?[ \\\\t])*))*(?:,@(?:(?:\\\\r\\\\n)?[ \\\\t])*(?:[^()<>@,;:\\\\\\\\\\\".\\\\[\\\\] \\\\000-\\\\031]+(?:(?:(?:\\\\r\\\\n)?[ \\\\t])+|\\\\Z|(?=[\\\\[\\\"()<>@,;:\\\\\\\\\\\".\\\\[\\\\]]))|\\\\[([^\\\\[\\\\]\\\\r\\\\\\\\]|\\\\\\\\.)*\\\\](?:(?:\\\\r\\\\n)?[ \\\\t])*)(?:\\\\.(?:(?:\\\\r\\\\n)?[ \\\\t])*(?:[^()<>@,;:\\\\\\\\\\\".\\\\[\\\\] \\\\000-\\\\031]+(?:(?:(?:\\\\r\\\\n)?[ \\\\t])+|\\\\Z|(?=[\\\\[\\\"()<>@,;:\\\\\\\\\\\".\\\\[\\\\]]))|\\\\[([^\\\\[\\\\]\\\\r\\\\\\\\]|\\\\\\\\.)*\\\\](?:(?:\\\\r\\\\n)?[ \\\\t])*))*)*:(?:(?:\\\\r\\\\n)?[ \\\\t])*)?(?:[^()<>@,;:\\\\\\\\\\\".\\\\[\\\\] \\\\000-\\\\031]+(?:(?:(?:\\\\r\\\\n)?[ \\\\t])+|\\\\Z|(?=[\\\\[\\\"()<>@,;:\\\\\\\\\\\".\\\\[\\\\]]))|\\\"(?:[^\\\\\\\"\\\\r\\\\\\\\]|\\\\\\\\.|(?:(?:\\\\r\\\\n)?[ \\\\t]))*\\\"(?:(?:\\\\r\\\\n)?[ \\\\t])*)(?:\\\\.(?:(?:\\\\r\\\\n)?[ \\\\t])*(?:[^()<>@,;:\\\\\\\\\\\".\\\\[\\\\] \\\\000-\\\\031]+(?:(?:(?:\\\\r\\\\n)?[ \\\\t])+|\\\\Z|(?=[\\\\[\\\"()<>@,;:\\\\\\\\\\\".\\\\[\\\\]]))|\\\"(?:[^\\\\\\\"\\\\r\\\\\\\\]|\\\\\\\\.|(?:(?:\\\\r\\\\n)?[ \\\\t]))*\\\"(?:(?:\\\\r\\\\n)?[ \\\\t])*))*@(?:(?:\\\\r\\\\n)?[ \\\\t])*(?:[^()<>@,;:\\\\\\\\\\\".\\\\[\\\\] \\\\000-\\\\031]+(?:(?:(?:\\\\r\\\\n)?[ \\\\t])+|\\\\Z|(?=[\\\\[\\\"()<>@,;:\\\\\\\\\\\".\\\\[\\\\]]))|\\\\[([^\\\\[\\\\]\\\\r\\\\\\\\]|\\\\\\\\.)*\\\\](?:(?:\\\\r\\\\n)?[ \\\\t])*)(?:\\\\.(?:(?:\\\\r\\\\n)?[ \\\\t])*(?:[^()<>@,;:\\\\\\\\\\\".\\\\[\\\\] \\\\000-\\\\031]+(?:(?:(?:\\\\r\\\\n)?[ \\\\t])+|\\\\Z|(?=[\\\\[\\\"()<>@,;:\\\\\\\\\\\".\\\\[\\\\]]))|\\\\[([^\\\\[\\\\]\\\\r\\\\\\\\]|\\\\\\\\.)*\\\\](?:(?:\\\\r\\\\n)?[ \\\\t])*))*\\\\>(?:(?:\\\\r\\\\n)?[ \\\\t])*)|(?:[^()<>@,;:\\\\\\\\\\\".\\\\[\\\\] \\\\000-\\\\031]+(?:(?:(?:\\\\r\\\\n)?[ \\\\t])+|\\\\Z|(?=[\\\\[\\\"()<>@,;:\\\\\\\\\\\".\\\\[\\\\]]))|\\\"(?:[^\\\\\\\"\\\\r\\\\\\\\]|\\\\\\\\.|(?:(?:\\\\r\\\\n)?[ \\\\t]))*\\\"(?:(?:\\\\r\\\\n)?[ \\\\t])*)*:(?:(?:\\\\r\\\\n)?[ \\\\t])*(?:(?:(?:[^()<>@,;:\\\\\\\\\\\".\\\\[\\\\] \\\\000-\\\\031]+(?:(?:(?:\\\\r\\\\n)?[ \\\\t])+|\\\\Z|(?=[\\\\[\\\"()<>@,;:\\\\\\\\\\\".\\\\[\\\\]]))|\\\"(?:[^\\\\\\\"\\\\r\\\\\\\\]|\\\\\\\\.|(?:(?:\\\\r\\\\n)?[ \\\\t]))*\\\"(?:(?:\\\\r\\\\n)?[ \\\\t])*)(?:\\\\.(?:(?:\\\\r\\\\n)?[ \\\\t])*(?:[^()<>@,;:\\\\\\\\\\\".\\\\[\\\\] \\\\000-\\\\031]+(?:(?:(?:\\\\r\\\\n)?[ \\\\t])+|\\\\Z|(?=[\\\\[\\\"()<>@,;:\\\\\\\\\\\".\\\\[\\\\]]))|\\\"(?:[^\\\\\\\"\\\\r\\\\\\\\]|\\\\\\\\.|(?:(?:\\\\r\\\\n)?[ \\\\t]))*\\\"(?:(?:\\\\r\\\\n)?[ \\\\t])*))*@(?:(?:\\\\r\\\\n)?[ \\\\t])*(?:[^()<>@,;:\\\\\\\\\\\".\\\\[\\\\] \\\\000-\\\\031]+(?:(?:(?:\\\\r\\\\n)?[ \\\\t])+|\\\\Z|(?=[\\\\[\\\"()<>@,;:\\\\\\\\\\\".\\\\[\\\\]]))|\\\\[([^\\\\[\\\\]\\\\r\\\\\\\\]|\\\\\\\\.)*\\\\](?:(?:\\\\r\\\\n)?[ \\\\t])*)(?:\\\\.(?:(?:\\\\r\\\\n)?[ \\\\t])*(?:[^()<>@,;:\\\\\\\\\\\".\\\\[\\\\] \\\\000-\\\\031]+(?:(?:(?:\\\\r\\\\n)?[ \\\\t])+|\\\\Z|(?=[\\\\[\\\"()<>@,;:\\\\\\\\\\\".\\\\[\\\\]]))|\\\\[([^\\\\[\\\\]\\\\r\\\\\\\\]|\\\\\\\\.)*\\\\](?:(?:\\\\r\\\\n)?[ \\\\t])*))*|(?:[^()<>@,;:\\\\\\\\\\\".\\\\[\\\\] \\\\000-\\\\031]+(?:(?:(?:\\\\r\\\\n)?[ \\\\t])+|\\\\Z|(?=[\\\\[\\\"()<>@,;:\\\\\\\\\\\".\\\\[\\\\]]))|\\\"(?:[^\\\\\\\"\\\\r\\\\\\\\]|\\\\\\\\.|(?:(?:\\\\r\\\\n)?[ \\\\t]))*\\\"(?:(?:\\\\r\\\\n)?[ \\\\t])*)*\\\\<(?:(?:\\\\r\\\\n)?[ \\\\t])*(?:@(?:[^()<>@,;:\\\\\\\\\\\".\\\\[\\\\] \\\\000-\\\\031]+(?:(?:(?:\\\\r\\\\n)?[ \\\\t])+|\\\\Z|(?=[\\\\[\\\"()<>@,;:\\\\\\\\\\\".\\\\[\\\\]]))|\\\\[([^\\\\[\\\\]\\\\r\\\\\\\\]|\\\\\\\\.)*\\\\](?:(?:\\\\r\\\\n)?[ \\\\t])*)(?:\\\\.(?:(?:\\\\r\\\\n)?[ \\\\t])*(?:[^()<>@,;:\\\\\\\\\\\".\\\\[\\\\] \\\\000-\\\\031]+(?:(?:(?:\\\\r\\\\n)?[ \\\\t])+|\\\\Z|(?=[\\\\[\\\"()<>@,;:\\\\\\\\\\\".\\\\[\\\\]]))|\\\\[([^\\\\[\\\\]\\\\r\\\\\\\\]|\\\\\\\\.)*\\\\](?:(?:\\\\r\\\\n)?[ \\\\t])*))*(?:,@(?:(?:\\\\r\\\\n)?[ \\\\t])*(?:[^()<>@,;:\\\\\\\\\\\".\\\\[\\\\] \\\\000-\\\\031]+(?:(?:(?:\\\\r\\\\n)?[ \\\\t])+|\\\\Z|(?=[\\\\[\\\"()<>@,;:\\\\\\\\\\\".\\\\[\\\\]]))|\\\\[([^\\\\[\\\\]\\\\r\\\\\\\\]|\\\\\\\\.)*\\\\](?:(?:\\\\r\\\\n)?[ \\\\t])*)(?:\\\\.(?:(?:\\\\r\\\\n)?[ \\\\t])*(?:[^()<>@,;:\\\\\\\\\\\".\\\\[\\\\] \\\\000-\\\\031]+(?:(?:(?:\\\\r\\\\n)?[ \\\\t])+|\\\\Z|(?=[\\\\[\\\"()<>@,;:\\\\\\\\\\\".\\\\[\\\\]]))|\\\\[([^\\\\[\\\\]\\\\r\\\\\\\\]|\\\\\\\\.)*\\\\](?:(?:\\\\r\\\\n)?[ \\\\t])*))*)*:(?:(?:\\\\r\\\\n)?[ \\\\t])*)?(?:[^()<>@,;:\\\\\\\\\\\".\\\\[\\\\] \\\\000-\\\\031]+(?:(?:(?:\\\\r\\\\n)?[ \\\\t])+|\\\\Z|(?=[\\\\[\\\"()<>@,;:\\\\\\\\\\\".\\\\[\\\\]]))|\\\"(?:[^\\\\\\\"\\\\r\\\\\\\\]|\\\\\\\\.|(?:(?:\\\\r\\\\n)?[ \\\\t]))*\\\"(?:(?:\\\\r\\\\n)?[ \\\\t])*)(?:\\\\.(?:(?:\\\\r\\\\n)?[ \\\\t])*(?:[^()<>@,;:\\\\\\\\\\\".\\\\[\\\\] \\\\000-\\\\031]+(?:(?:(?:\\\\r\\\\n)?[ \\\\t])+|\\\\Z|(?=[\\\\[\\\"()<>@,;:\\\\\\\\\\\".\\\\[\\\\]]))|\\\"(?:[^\\\\\\\"\\\\r\\\\\\\\]|\\\\\\\\.|(?:(?:\\\\r\\\\n)?[ \\\\t]))*\\\"(?:(?:\\\\r\\\\n)?[ \\\\t])*))*@(?:(?:\\\\r\\\\n)?[ \\\\t])*(?:[^()<>@,;:\\\\\\\\\\\".\\\\[\\\\] \\\\000-\\\\031]+(?:(?:(?:\\\\r\\\\n)?[ \\\\t])+|\\\\Z|(?=[\\\\[\\\"()<>@,;:\\\\\\\\\\\".\\\\[\\\\]]))|\\\\[([^\\\\[\\\\]\\\\r\\\\\\\\]|\\\\\\\\.)*\\\\](?:(?:\\\\r\\\\n)?[ \\\\t])*)(?:\\\\.(?:(?:\\\\r\\\\n)?[ \\\\t])*(?:[^()<>@,;:\\\\\\\\\\\".\\\\[\\\\] \\\\000-\\\\031]+(?:(?:(?:\\\\r\\\\n)?[ \\\\t])+|\\\\Z|(?=[\\\\[\\\"()<>@,;:\\\\\\\\\\\".\\\\[\\\\]]))|\\\\[([^\\\\[\\\\]\\\\r\\\\\\\\]|\\\\\\\\.)*\\\\](?:(?:\\\\r\\\\n)?[ \\\\t])*))*\\\\>(?:(?:\\\\r\\\\n)?[ \\\\t])*)(?:,\\\\s*(?:(?:[^()<>@,;:\\\\\\\\\\\".\\\\[\\\\] \\\\000-\\\\031]+(?:(?:(?:\\\\r\\\\n)?[ \\\\t])+|\\\\Z|(?=[\\\\[\\\"()<>@,;:\\\\\\\\\\\".\\\\[\\\\]]))|\\\"(?:[^\\\\\\\"\\\\r\\\\\\\\]|\\\\\\\\.|(?:(?:\\\\r\\\\n)?[ \\\\t]))*\\\"(?:(?:\\\\r\\\\n)?[ \\\\t])*)(?:\\\\.(?:(?:\\\\r\\\\n)?[ \\\\t])*(?:[^()<>@,;:\\\\\\\\\\\".\\\\[\\\\] \\\\000-\\\\031]+(?:(?:(?:\\\\r\\\\n)?[ \\\\t])+|\\\\Z|(?=[\\\\[\\\"()<>@,;:\\\\\\\\\\\".\\\\[\\\\]]))|\\\"(?:[^\\\\\\\"\\\\r\\\\\\\\]|\\\\\\\\.|(?:(?:\\\\r\\\\n)?[ \\\\t]))*\\\"(?:(?:\\\\r\\\\n)?[ \\\\t])*))*@(?:(?:\\\\r\\\\n)?[ \\\\t])*(?:[^()<>@,;:\\\\\\\\\\\".\\\\[\\\\] \\\\000-\\\\031]+(?:(?:(?:\\\\r\\\\n)?[ \\\\t])+|\\\\Z|(?=[\\\\[\\\"()<>@,;:\\\\\\\\\\\".\\\\[\\\\]]))|\\\\[([^\\\\[\\\\]\\\\r\\\\\\\\]|\\\\\\\\.)*\\\\](?:(?:\\\\r\\\\n)?[ \\\\t])*)(?:\\\\.(?:(?:\\\\r\\\\n)?[ \\\\t])*(?:[^()<>@,;:\\\\\\\\\\\".\\\\[\\\\] \\\\000-\\\\031]+(?:(?:(?:\\\\r\\\\n)?[ \\\\t])+|\\\\Z|(?=[\\\\[\\\"()<>@,;:\\\\\\\\\\\".\\\\[\\\\]]))|\\\\[([^\\\\[\\\\]\\\\r\\\\\\\\]|\\\\\\\\.)*\\\\](?:(?:\\\\r\\\\n)?[ \\\\t])*))*|(?:[^()<>@,;:\\\\\\\\\\\".\\\\[\\\\] \\\\000-\\\\031]+(?:(?:(?:\\\\r\\\\n)?[ \\\\t])+|\\\\Z|(?=[\\\\[\\\"()<>@,;:\\\\\\\\\\\".\\\\[\\\\]]))|\\\"(?:[^\\\\\\\"\\\\r\\\\\\\\]|\\\\\\\\.|(?:(?:\\\\r\\\\n)?[ \\\\t]))*\\\"(?:(?:\\\\r\\\\n)?[ \\\\t])*)*\\\\<(?:(?:\\\\r\\\\n)?[ \\\\t])*(?:@(?:[^()<>@,;:\\\\\\\\\\\".\\\\[\\\\] \\\\000-\\\\031]+(?:(?:(?:\\\\r\\\\n)?[ \\\\t])+|\\\\Z|(?=[\\\\[\\\"()<>@,;:\\\\\\\\\\\".\\\\[\\\\]]))|\\\\[([^\\\\[\\\\]\\\\r\\\\\\\\]|\\\\\\\\.)*\\\\](?:(?:\\\\r\\\\n)?[ \\\\t])*)(?:\\\\.(?:(?:\\\\r\\\\n)?[ \\\\t])*(?:[^()<>@,;:\\\\\\\\\\\".\\\\[\\\\] \\\\000-\\\\031]+(?:(?:(?:\\\\r\\\\n)?[ \\\\t])+|\\\\Z|(?=[\\\\[\\\"()<>@,;:\\\\\\\\\\\".\\\\[\\\\]]))|\\\\[([^\\\\[\\\\]\\\\r\\\\\\\\]|\\\\\\\\.)*\\\\](?:(?:\\\\r\\\\n)?[ \\\\t])*))*(?:,@(?:(?:\\\\r\\\\n)?[ \\\\t])*(?:[^()<>@,;:\\\\\\\\\\\".\\\\[\\\\] \\\\000-\\\\031]+(?:(?:(?:\\\\r\\\\n)?[ \\\\t])+|\\\\Z|(?=[\\\\[\\\"()<>@,;:\\\\\\\\\\\".\\\\[\\\\]]))|\\\\[([^\\\\[\\\\]\\\\r\\\\\\\\]|\\\\\\\\.)*\\\\](?:(?:\\\\r\\\\n)?[ \\\\t])*)(?:\\\\.(?:(?:\\\\r\\\\n)?[ \\\\t])*(?:[^()<>@,;:\\\\\\\\\\\".\\\\[\\\\] \\\\000-\\\\031]+(?:(?:(?:\\\\r\\\\n)?[ \\\\t])+|\\\\Z|(?=[\\\\[\\\"()<>@,;:\\\\\\\\\\\".\\\\[\\\\]]))|\\\\[([^\\\\[\\\\]\\\\r\\\\\\\\]|\\\\\\\\.)*\\\\](?:(?:\\\\r\\\\n)?[ \\\\t])*))*)*:(?:(?:\\\\r\\\\n)?[ \\\\t])*)?(?:[^()<>@,;:\\\\\\\\\\\".\\\\[\\\\] \\\\000-\\\\031]+(?:(?:(?:\\\\r\\\\n)?[ \\\\t])+|\\\\Z|(?=[\\\\[\\\"()<>@,;:\\\\\\\\\\\".\\\\[\\\\]]))|\\\"(?:[^\\\\\\\"\\\\r\\\\\\\\]|\\\\\\\\.|(?:(?:\\\\r\\\\n)?[ \\\\t]))*\\\"(?:(?:\\\\r\\\\n)?[ \\\\t])*)(?:\\\\.(?:(?:\\\\r\\\\n)?[ \\\\t])*(?:[^()<>@,;:\\\\\\\\\\\".\\\\[\\\\] \\\\000-\\\\031]+(?:(?:(?:\\\\r\\\\n)?[ \\\\t])+|\\\\Z|(?=[\\\\[\\\"()<>@,;:\\\\\\\\\\\".\\\\[\\\\]]))|\\\"(?:[^\\\\\\\"\\\\r\\\\\\\\]|\\\\\\\\.|(?:(?:\\\\r\\\\n)?[ \\\\t]))*\\\"(?:(?:\\\\r\\\\n)?[ \\\\t])*))*@(?:(?:\\\\r\\\\n)?[ \\\\t])*(?:[^()<>@,;:\\\\\\\\\\\".\\\\[\\\\] \\\\000-\\\\031]+(?:(?:(?:\\\\r\\\\n)?[ \\\\t])+|\\\\Z|(?=[\\\\[\\\"()<>@,;:\\\\\\\\\\\".\\\\[\\\\]]))|\\\\[([^\\\\[\\\\]\\\\r\\\\\\\\]|\\\\\\\\.)*\\\\](?:(?:\\\\r\\\\n)?[ \\\\t])*)(?:\\\\.(?:(?:\\\\r\\\\n)?[ \\\\t])*(?:[^()<>@,;:\\\\\\\\\\\".\\\\[\\\\] \\\\000-\\\\031]+(?:(?:(?:\\\\r\\\\n)?[ \\\\t])+|\\\\Z|(?=[\\\\[\\\"()<>@,;:\\\\\\\\\\\".\\\\[\\\\]]))|\\\\[([^\\\\[\\\\]\\\\r\\\\\\\\]|\\\\\\\\.)*\\\\](?:(?:\\\\r\\\\n)?[ \\\\t])*))*\\\\>(?:(?:\\\\r\\\\n)?[ \\\\t])*))*)?;\\\\s*)");
			
			Matcher page_matcher = link_pattern.matcher(email_message.getContent().toString());
			
			while (page_matcher.find()) {
				System.out.println("Found OTP: " + page_matcher.group(1));
			}
			
			email_message.setFlag(Flags.Flag.SEEN, true);
			email_inbox.close(true);
			store.close();
			
//			String[] emails = {
//					"\"noreplay\"@rctiplus.com",
//					"Support RCTI+ <noreplay@rctiplus.com>",
//					"em1258.rctiplus.com",
//					"dikakoko04 <dikakoko04@gmail.com>",
//					"rctiplus.com"
//			};
			
			
//			for (String email: emails) {
//				System.out.println(email + "is " + (link_pattern.matcher(email).matches() ? "valid" : "invalid" ));
//			}
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
}
